import { NetworkAdapter } from "./base.js";
import { HttpStatus } from "../const.js";
import { mergeOptions } from "../options.js";
import { Either, EitherAsync } from "purify-ts";
/**
 * Simple net adapter implementation that echoes the request info back as the response.
 */
export class EchoNetworkAdapter extends NetworkAdapter {
    adapterName = "echo";
    request = (method, url, body, options) => {
        const response = {
            method,
            url,
            body,
            options,
            mergedOptions: mergeOptions(this.getConfig(), options),
        };
        const responseStr = JSON.stringify(response, null, 4);
        return EitherAsync.liftEither(Either.of({
            data: new ReadableStream({ start: controller => controller.enqueue(responseStr) }),
            headers: new Headers(),
            status: HttpStatus.OK,
            statusText: "OK",
            retryCount: 0,
            text: async () => responseStr,
            json: async () => response,
            blob: async () => new Blob([responseStr]),
            response: () => response,
        }));
    };
}
//# sourceMappingURL=echo.js.map